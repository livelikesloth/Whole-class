 Javascript Step01_dataType_example03.html
            ~ Step01_event_example03.html

error
    정상 동작이 안될때
    검사 console 동작 실행해보면 error message가 나옴
    눌러보면sources 에서 찾아줌.
    비교해서 찾아보고 오탈자를 찾아내면 됨.

EVENT
    이벤트 처리를 onXXX="" 속성을 사용해서 처리하면 global 변수(함수)가 필요.
    
        <button onclick="---js영역---"></button>

        <script>
        ||-----------||
        ||global area||
        ||-----------||
        </script>
    
    하지만 global 변수를 많이 만드는 것은 좋지 않다. client가 수정할 수도 있음.
    document를 통해 참조값을 알아낼 수 있다.
        document.querySelector() 맨 앞 하나. 주로 id
        document.querySelectorAll() 해당되는 모든 것. 주로 여러개 사용하는 것들
        이 두 함수를 통해 알아 낼 수 있음
    callback function 
    함수를 전달만 해놓으면 자동으로 시점이 되면 실행 되는 함수.
    function({이 안에 코딩만 작업해 놓으면 됨.})
        document.querySelectorAll("지정할상대).addEventListener("stringtype", function(){
            document.querySelector("#console").innerText="눌렀넹";});


CSS 
    내부 css는 스타일을 정해줌
    inlie css 는 css를 적용할 요소에 style 속성을 이용해서 직접 css를 작성할 수 있게 만들어줌
    selector는 필요 없음 
    내부 css보다 우선됨 
        Javascript로도 css를 제어할 수 있음.
        document.querySelectorAll("div")[0].style.backgroundColor="gray"
        document.querySelectorAll("div")[0].style.fontSize="100px"
    속성명은 원래 -로 나뉘는데 css에서는 산술 연산자로 인식을 하기 때문에 뒷 단어 첫글자를 대문자로 바꿔줌
        background-color -> backgroundColor
        font-size -> fontSize
    수가 너무 많아 부담이 가는 작업이 있다면 변수에 담아놓아서 한번에 작업할 수 있다.

함수에 추가되는 매개변수
    정보를 더 불러오고 싶다면 매개변수를 추가해 불러오면 된다.
    변수를 공유해서 사용가능 
    함수 밖에서 설정해놔야 공유해서 사용가능

반복문 for
    for(let i=minnum; i<maxnum; i++){
        console.log("오잉?");
        console.log(i);
        }

    xxx.length를 사용해 배열의 크기대로 불러올 수 있다.
    배열이 여러개 있다면 변수에 넣어 코드를 간단하게 만들 수 있다.

조건문 if
    어떤 명령을 조건부로 사용할 때 if(){}문을 사용하면 된다.
     if(){} 만약()면 {}를 수행하라
     
     if(){1}else{2} 만약()면 {1}을 수행하고 아니면{2}를 실행하라
    
function
    특정 시점에 일관 싱핼할 javscript들을 모아 놓을 수 있다.
    함수를 호출(call)하면 함수 안쪽으로 실행순서가 들어간다.
    함수는 언제 종료되는가?
        함수 안에 있는 모든 javascript를 수행하고 더 이상 수항할 javascript 가 없을때
        수행하다가 return 이라는 예약어를 만나도 종료가 된다.

상태값(state)
    두가지면 boolean 여러가지면 number나 string

Math
    Math.random()                   1 미만의 무작위 실수 받기
        Math.random()*10            0이상 10 미만의 랜덤한 실수
    Math.floor()                    내림 연산
        Math.floor(Math.random()*)  0이상 9 이하의 랜덤한 정수.
        